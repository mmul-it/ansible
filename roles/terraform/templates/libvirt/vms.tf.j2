# Libvirt VMs and related volumes creation blocks
{% for host in groups[terraform_group_name] %}
{% set vm = hostvars[host].terraform_libvirt %}

# VM {{ vm.name }} specific storage volumes
{% for disk in vm.disks %}
resource "libvirt_volume" "{{ disk.volume_id }}" {
  name = "{{ disk.file }}"
  pool = "{{ disk.pool | default('default') }}"
{% if disk.base_volume_id is defined %}
  base_volume_id = libvirt_volume.{{ disk.base_volume_id }}.id
{% endif %}
{% if disk.source is defined %}
  source = "{{ disk.source }}"
{% endif %}
{% if volume.size is defined %}
  size = "{{ disk.size }}"
{% endif %}
  format = "{{ disk.format | default('raw') }}"

  depends_on = [libvirt_pool.{{ disk.pool | default('default') }}]
}
{% endfor %}

# VM {{ vm.name }} specification
resource "libvirt_domain" "{{ vm.name }}" {
  name                         = "{{ vm.name }}"
  memory                       = "{{ vm.memory }}"
  vcpu                         = "{{ vm.vcpu }}"

{% if vm.cloudinit_disk is defined %}
  cloudinit = libvirt_cloudinit_disk.{{ vm.cloudinit_disk }}.id
{% endif %}

{% for interface in vm.network_interfaces %}
  network_interface {
    network_id     = libvirt_network.{{ interface.network_id }}.id
{% if interface.addresses is defined %}
    addresses      = [{% for address in interface.addresses %}"{{ address }}"{%- if not loop.last -%}, {%- endif -%}{% endfor %}]
{% endif %}
{% if interface.mac is defined %}
    mac            = "{{ interface.mac }}"
{% endif %}
{% if interface.wait_for_lease is defined %}
    wait_for_lease = {{ interface.wait_for_lease }}
{% endif %}
  }
{% endfor %}

{% for disk in vm.disks %}
  disk {
    volume_id            = libvirt_volume.{{ disk.volume_id }}.id
  }
{% endfor %}

  depends_on = [{% for disk in vm.disks %}libvirt_volume.{{ disk.volume_id }}{%- if not loop.last -%}, {%- endif -%}{% endfor %}]

{% if vm.consoles is defined %}
{% for console in vm.consoles %}
  console {
    type        = "{{ console.type }}"
    target_port = "{{ console.target_port }}"
    target_type = "{{ console.target_type }}"
  }
{% endfor %}
{% endif %}

{% if vm.graphics is defined %}
{% for graphic in vm.graphics %}
  graphics {
    type        = "{{ graphic.type }}"
    listen_type = "{{ graphic.listen_type }}"
    autoport    = "{{ graphic.autoport }}"
  }
{% endfor %}
{% endif %}
}
{% endfor %}
